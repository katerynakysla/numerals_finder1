import pytest
from app.main import find_numerals

@pytest.mark.parametrize("input_text, expected_output", [
    ("один", ["один"]),
    ("дві", ["дві"]),
    ("три", ["три"]),
    ("один два три", ["один два три"]),
    ("5 сотен", ["сотен"]),
    ("У мене є сімнадцять яблук і триста груш.", ["сімнадцять", "триста"]),
    ("Я покликала маму і ми вдвох вже насолоджувались побаченим.", ["вдвох"]),
    ("Ми пригостили трьохсот котів та сім тисяч собак.", ["трьохсот", "сім тисяч"]),
    ("Цей текст не містить числівників.", []),
    ("Одного разу, раненько вранці я побачила у вікно дві маленькі пташки. Я живу на першому поверсі, тому бачила їх ніби перед собою. Вони бавились на гілочках саду у моєму дворі, де росли чотири високі берези і один красень дуб. Невдовзі до них приєдналась ще третя подружка. Я покликала маму і ми вдвох вже насолоджувались побаченим. Мама запропонувала погодувати пташенят, і тому я швидко вдягнувши одну з улюблених спідничок і нову кофтинку, придбану три дні тому вибігла у двір. Почавши годувати пташок ми побачили щось неймовірне, спочатку прилитіли дві сойки, потім голуб з голубкою і трьома маленькими пташенятами, а через деякий час з гілки спустилась зграя пташок, їх важко було полічити... Чи то сім чи вісім сірих горобців і один з них мав підбите крило. Ми звичайно ж допомогла пташці, три дні він жив у нас у квартирі і їв смачні зерна пшениці. ", ["одного", "дві", "першому", "чотири", "один", "третя", "вдвох", "одну", "три", "дві", "трьома", "сім", "вісім", "один", "три"])
])
def test_find_numerals(input_text, expected_output):
    result = find_numerals(input_text)
    assert result == expected_output, f"Expected {expected_output} but got {result}"

@pytest.mark.parametrize("input_text, expected_output", [
    ("", []),
    (",.!?-", []),
    ("один, два. три!?", ["один", "два", "три"]),
])
def test_edge_cases(input_text, expected_output):
    result = find_numerals(input_text)
    assert result == expected_output, f"Expected {expected_output} but got {result}"